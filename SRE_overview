key point

 RELIABIILITY, AVAILABIILITY AND PERFORMANCE OF the application/system ( appp and the platform should be performant)
  This is to avoid downtime that can affect performance of the system especially when there's a new release
- e.g misconfigurations because devops want to push things very fast
- In such a situation where we are having instability, new release needs to be stopped because no need to release new feature which can break because the sytem is not working
   we need to handle the stability of the sytem making sure that we are within the error budget before we move foward

Key Task of SRE 
- determine indicators in the form of SLI, SLO,SLA
- you need to measure reliability in form of SLI, SLO, SLA

 QUESTIONS
1) How would you monitor a new app?
  - It will depend on the type of app wether its a legacy app or a microservice app. for Micro app it would certainly be running in a k8s cluster. Here I would use prometheuse since its good for micr serv app, and grafana
  - I'm going to use service discovery (or add the target into the prom configure file) to be able to discover the app and be able to scrab the metrics. Normally for such app I will be able to monitor key metrics
    that important to the use to be able to use as indicators to trigger alerts if something happends.( no of errors, no of request to help me know the volume of my transaction, latency, ) Its a modern way which prom 
    uses to dicover files by making sure of consistency so that we avoid some disruption each time we have to reload. 
       I can use hashicorp consul (I put the endpoint of the target)
       I can use a custom file (target.yaml)
  - If i want to monitor the k8s cluster itself I use the kube state metric, I can monitor the call that are made on the API server, kubelet,deployments.
  - For the worker nodes which k8s is using, I deploy a node exporter

2) what do you understand by SLI,SLO and SLA
  SLI are indicator that measure the performance of an app. e.g if we have an app that is running and we want to determind the indicators which are important for the performance we need to find out from the users of that app
  which aspect of that is very important to them.e.g users value the response time of the app. We look at which indicator can evaluate the response time of the app e.g latancy. The time it takes to make a request and get a
  response. we now set a threshold if exceeded an alert should be fired. The alert is fired to the person responsible to take action. The aim is to catch issues before its being identified by the user.
  
  - After identifying the indicator I need to set the SLO. The objective could be that 96% of our request should not go above this threshold. Our error budget here is 4% 
  - The SLA is a formal aggrement that we have with the clients that using the app. We are telling them that 94% of the time the app will be available. This is so that in case the Aggrement is not met, we still have 2% to be
    able to adjust.
3) How would you write manifest files if you want to deploy an app?
  - I use helms charts to write manifest file. Helms is going to produce the chart, I edit the files and customize the deployments in the values.yaml file ( Version, enviroment, image,   )
    It makes the file more reuseable because I can share it accross multiple teams. Some companies have private Helms repo. I fetch my chart from, templtae it and adjust. I deploy the app from the pipeline using Helm.
4) Have you ever used Helm chart. Which vrsion?
    - Helms version 2 (this was available 2 years ago. It had a security concerncalled the TILLER, a request that goes to the API to makee request for app to be deployed. The TILLER was deployed which admin previledges)
    - Helm version 3
  WHen you do Helms craet it creates the helm client
     To Deploy a helms cgart ( helms install "release name" "chart name"), it its not working as expected I can do rollback or upgrade of the helms chart.
5) How do you swthc between DEV, staging And ProD environment and how do you include it in your pipeline? 
  create a pull request to the DEV env, and its deployed there and we do testing if everything is okay
6) How do you include it in your pipeline?
   AT the level of stages, I use the "when directory"
7) Can you list some automation task you have been able to realis when working?
  - I have written scripts to delete log files that are not more used again
  - I have written scripts to identify branches that in the github are not active.
  - I have written scrips to automate the creation of users , attributing permission.
  - Ansible playbooks to configure servers
8) If users reachout to you that the app is not available what will you do?
  - check my tool

9) can you share a sitauation you faced and how you were able to resolve it?
   - I has a situation where we were doing a migration, we were using a script which was aimed at doing some conversion of  a file into a different file extension. The script kept failing after few seconds. It was a concern
     because the script needed to run before the migration could take place. Time was an issue and it was a blockage on the prroject. We had to troubleshoot to see what the issue was, verified and after identifying 
     that it was  permission issue that was causing the script not to run as expected and this could not be adjusted because I was not an admin. I had to contact the admin. They chexcked the problem and worked on it but once
     it was run it didnot succeed again. They fixed it again we run again in preprod it worked and we moved it to Prod.

  - we had this banking app which was aim at valorising digital wallet of clients. The app was a critical app to us. One of the key indicator was the "time it will take to convert the digital wallet". If 85% of the digital wallet is 
   converted before mid-day then we consideer that is working very well otherwise its not working as expected. One day the app was down, nothing was working. It caused a panic in the whole sytem because many different department
   were concern so we needed to resolve the issue as fast as possible so as to reduce the impact it will have on the system( the MTTI and MTTR). we had to get on contact with the team that was involved in developing that app.
   I was with them, we had to checking . It took us about 5 hours. The problem was that " the configuration, the properties file for that app was showing down. Onee of the configuration was showing down that is why it 
   was not working. we had to re-adjust the properties file to be showing up so that it can connect. Once the connection was done. we tested in preprod and we tested and everything was working.
    - another challenge here was that there was no formal documentation in place to see what had happened to be able to resolve the problem. After the incidence I was able to document the issue and the process.

  - The monitoring tool that was in place was creating alert fatigue, I had to fine tune them so that alerts would promt action.


key tool SLIs

what are SLI
They are specific quantitative metrics that defines the performance and reliability of a service e.g if from customer point of view we see that availabilty is what is
is very important, or the speed of response to a request that have been made , this becomes and indicator.

From here I need to ask myself what metrics can be used to measure this indicator e.g latency. How can I monitor the speed of rquest made. we can set a threshold with respect to this indicator
- if for 5 min, 30% of request made exceed 20 miliseconds then something is wrong, hence we should set and alert
- SLI are expressed iin ratios because it represents the aspect of issues that are more critical to a user
SLI are selected by ( devops team, SREs , and DEV, Product owner) because SLi should be aligned with users expectation and business goals.

for a web service SLI could include
- latency which is the time it takes for a request to be processed
- availabilty which is the % of time when the service of operational
- error rates which is the proportion of request that result in an error

The aim of SRE is also to reduce MTTI and MTTR and also to minimise RTO and RPO

     Error budget
Becuase service are not 100% available there is a possibility of an incidence and we could have an error budget
SLO = are specific targets that define the acceptable level of reliability for a service ( expressed in %)
error is closely tide to the SLO and representd the allowed amount of error or downtime within a specified timeframe.

- I use a dashboard on a excel sheet to document all incidence on a weekly bases ( and intergret it in a power point for presentation)
  I gather these incidence from the various teams 
  e.g on x day Y happened it was resolved 
      on w day h happened , and its still in progress because there's an issue that is blocking 
      on r day we need to do update of the sytem ( all the plan update for the week is there) 

   - the updates which were done , what was the feedback e.g it caused alot of instability in the system an app and things didn't go well 
- There are services which we have already identified their SLI that we are monitoring.
- Y service could not perform well because its month end so its expected

Example
  we has an app which was aim at converting digital wallet. It was expected that the threshold was 85% within mid day, if 85% of the digital wallet have been converted
  it is good but anything below 85 then there's an issue. I communicate with team looking for those with expertise to handle the issue for those that I cannot handle.
      
- AS an SRE I consistantly ensure monitoring of app by adding targets to the prometheus configuration file
- I have been putting in place alerts to be able to fire alerts when threshold is exceeded via the alert manager.
- I do queries to get inside infor on metrices that are critical to us like 500 errors, response time
- I have written scripts that is able to identify branches in our source code which have not been utilized for the past 30 days so as to be able to a kind of audit.
- I have reduced the time for pipelines to run Jenkins by making sure that DEV should be able to identify which branch they have to use
     ( TIMER git clone --single branch "" ""url) or limiting it to a specific commit ( --depth 1)
- I have been able to write Dockerfiles for migration of VM based deployments to containerized architecture. 
   here i had core meetings with the dev team to collect requirements such as the app env( e.g ajva app what kind of env does it require), 
   calls with the dev team to get information about configuration, I gt env variableees about the information, what commands will be needed to build and start the app
   what kind of ports will that app use to listen, commands to do the test of the API, ones all of this infos is provided I need time to be able to understand the app
   writing the Dockerfile to deploy the Dockerise app on a Docker Host manually in case ther's a failure II make a call with the dev team and most at times its always 
   configuration issue or port issues that will cause that to fail. Ones the app is working well I creatre a helms chart to write the multiple manifest files the deploy them 
   to a k8s cluster an test the app with couple of major test cases. In the k8s we will create a pipeline to deploy the app. I deploy to PREPROD env or test env partially
   I use few replicas and few port, I observe for some days and i will still have some instance of that app still running on the VM. I am checking for important metrics like 500 errors
   success rates, latency, restarts. If everything is working as expected we now do complete roll-out to the k8s cluster, from there we have a set up with the dev team
   to educate them on how the things are going and also support them in  deployment issues, configuration issues where changes may be done and so on. 


    - Another thing I have been involved in is creating Docker agent for my pipeline because I am deploying using agents as slave 
   - I have been able to write Dockerfiles to create custom images for my pipeline agent
   - I have been able to add users to k8s namespaces and give them specific roles
  - Troubleshoot issues of OMKILL, deployment issues, image pull backoff (maybe image used is not available and cannot be found, or the tag is not correct or syntax issue),
    crashlooping (memory issues, probes issues), init errors, config issues and permission issues.  

 - I have been use scripts in a Jenkins to convert manual processes into automation.
 - II have been able to migrate pipelines from freestyle job to pipeline job.(looking at the stages of a freestyle job and writing a new Jenkinfile)
 - Addiiing multiple stages to my existng pipeline (e.g adding a test phase in my pipeline, sonarqube phase, scanning imgae)
 - upgrading of Jenkins to a stable version because every 3 months a new version of Jenkins is released. 
   Jenkins has 2 versions long term support(stability) and weekly releases ( to handle bug fixes). I need to be upgrading the Jenkins controllre to a stable version
 - Installation and configuration of plugins such Blueocean that enable quick troubleshooting, Job history plugin that will enable me to audit who
     made changes in a jenkins job, Job DSl plugin which is used to update jobs with their default configurations.
 - Backup of the Jenkins home directory . Trying tio make Jenkins highly available by having 2 Jenkins controllers which are sync using a NAS or a SAN
 - I have abdopted best practices of implementing jenkins like cleaning old builds logs so that it should not overload storage, time out for every job if a job exceeds a 
   particular time the job should be stopped so that it releases the agent or slave for other jobs.
 - I have been able to monitor the Jenkins controller by installing a prometheuse plugin in Jenkins which helps to know the number of jobs that are running, to know the jobs that succeeded
   and those that failed.

- Handling incidence and ensure proper documentation on confluence for incidence that have been resolved for futue reference.
- On call rotation raising tickets when they arise and following up the resaolution of those tickets.

    N1 - minor issues
    N2  = if N1 cannot resolve it escalates it ( e.g a linux problem. some companies have support for their app
    N3  = 

   e.g we had an issue with one app , which was related to linux. we were doing a migration from an old system to a new system . After thing was documented and we 
     had planned that the migrationwas supposed to take place on a weekend because activities are low. The issue is the miigration does not succed who is on a standby 
    incase the migration does not succed. Who are the people that this app is affecting. To what extend will they be affected, what is the rollback plan, 
    document it and everyone sign it.

   e.g There was script which was supposed to help automate a particular task. The user who was supposed to execute that script couldn't do it because I could not give hime executable permission.
     The people who were incharge of the app, we contacted them, we troubleshooted, shared screen and explained what the issue was intirely. They asked me to test and I tested in PREPROD but it was 
     still failing. It was starting but after running for few seconds it stops. It was not sustainable. Maybe its a crone job that has to run for specific time, identifying all branches,
    that have made than 30 days or all files ( we has a NFS where they files were about 5000 TB). We had to reduce these because it was already getting too large.
    We had to find out those files which had a larger % and start reducng them from there. What are those files that have not been used for long.
 - You can have a script that is going to run in a particular directory to find out any file that used for a certain period of time should be removed. You automate 
   the process via a crontab ( execute the script on linux crontab -e) for you to program e.g everyday at midnight 
 - 
